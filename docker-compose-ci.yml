version: "3.3"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    image: vadimlysenko/goals:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - migrations
    ports:
      - "8000:8000"
    command: >
      sh -c "python todolist/manage.py runserver 0.0.0.0:8000"
  migrations:
    image: vadimlysenko/goals:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    depends_on:
      - db
    env_file:
      - .env
    command: >
      sh -c "python todolist/manage.py migrate"
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 3s
      timeout: 3s
      retries: 5
  bot:
    image: vadimlysenko/goals.bot:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    env_file:
      - .env
    command: >
      sh -c "python todolist/manage.py runbot"
    depends_on:
      - db
      - migrations

volumes:
  pg_data:
